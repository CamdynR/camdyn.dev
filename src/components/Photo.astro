---
import { PHOTOS_DIR } from '../consts';

interface Props {
  post: string;
  index: number;
  alt: string;
  feature: boolean;
  prioritize: boolean;
}
const { post, index, alt, feature, prioritize } = Astro.props;
let baseURL = `${PHOTOS_DIR}${post}/${index}`;
---

<picture
  class={feature ? 'feature photo' : 'photo'}
  data-alt={alt}
  data-base-url={baseURL}
>
  <source
    srcset={`
      ${baseURL}_XS.avif 250w, 
      ${baseURL}_S.avif 500w, 
      ${baseURL}_M.avif 1000w, 
      ${baseURL}_L.avif 2000w, 
      ${baseURL}_XL.avif 3000w, 
      ${baseURL}.avif 4000w
    `}
    type='image/avif'
    sizes={feature
      ? '(max-width: 1800px) 80vw, 1564px'
      : '(max-width: 500px) 100vw, 500px'}
  />
  <source
    srcset={`
      ${baseURL}_XS.webp 250w, 
      ${baseURL}_S.webp 500w, 
      ${baseURL}_M.webp 1000w, 
      ${baseURL}_L.webp 2000w, 
      ${baseURL}_XL.webp 3000w, 
      ${baseURL}.webp 4000w
    `}
    type='image/webp'
    sizes={feature
      ? '(max-width: 1800px) 80vw, 1564px'
      : '(max-width: 500px) 100vw, 500px'}
  />
  <source
    srcset={`
      ${baseURL}_XS.jpg 250w, 
      ${baseURL}_S.jpg 500w, 
      ${baseURL}_M.jpg 1000w, 
      ${baseURL}_L.jpg 2000w, 
      ${baseURL}_XL.jpg 3000w, 
      ${baseURL}.jpg 4000w
    `}
    type='image/jpg'
    sizes={feature
      ? '(max-width: 1800px) 80vw, 1564px'
      : '(max-width: 500px) 100vw, 500px'}
  />
  <img
    src={`${baseURL}_${feature ? 'L' : 'S'}.jpg`}
    alt={alt}
    width={feature ? '1564' : '500'}
    height={feature ? '1043' : '333'}
    class={feature ? 'feature' : ''}
    loading={prioritize ? 'eager' : 'lazy'}
  />
</picture>

<style>
  picture {
    display: block;
    height: fit-content;
    margin: 0;
    position: relative;
    width: fit-content;
  }

  picture.feature {
    margin: 2rem;
  }

  picture::before {
    background-color: rgba(0, 0, 0, 0.5);
    content: 'Click to Enlarge';
    display: grid;
    height: 100%;
    opacity: 0;
    place-items: center;
    position: absolute;
    transition: 0.2s ease opacity;
    width: 100%;
    z-index: 1;
  }

  picture img {
    aspect-ratio: 3 / 2;
    display: block;
    max-width: 500px;
    object-fit: cover;
    transition: 0.2s ease all;
    vertical-align: top;
  }

  picture img.feature {
    margin: 0;
    max-width: calc(1500px + 2 * 2rem);
  }

  @media (hover: hover) {
    picture:hover {
      cursor: pointer;
      filter: drop-shadow(0 0 10px rgba(0, 0, 0, 1));
      transform: scale(1.03);
      transition: 0.2s ease all;
    }

    picture:hover::before {
      transition: 0.2s ease opacity;
      opacity: 1;
    }
  }
</style>

<script>
  // @ts-nocheck

  let photos = [...document.querySelectorAll('picture.photo')];
  let photoViewer = document.querySelector('#photo-viewer');
  let img = photoViewer?.children[0];
  photos.forEach((photo) => {
    photo.addEventListener('click', () => {
      img?.setAttribute('src', `${photo.dataset.baseUrl}.jpg`);
      photoViewer?.showModal();
    });
  });

  document.addEventListener('keydown', (e) => {
    if (e.key !== 'Escape') return;
    img?.removeAttribute('src', '');
    photoViewer?.close();
  });

  photoViewer?.addEventListener('click', () => {
    img?.removeAttribute('src', '');
    photoViewer?.close();
  });
</script>
